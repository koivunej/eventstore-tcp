initSidebarItems({"enum":[["Message","Enumeration of currently supported messages. The plan is to include every defined message while trying to decode responses into `Result` alike messages, such as `ReadEventCompleted`."],["NotHandledReason",""],["ReadDirection","The direction in which events are read."],["ReadEventFailure","`ReadEventFailure` maps to non-success of `ReadEventResult`"],["ReadStreamFailure","Non-success projection of the `ReadStreamResult` enum on the wire representing a failed `ReadStreamCompleted` request."],["WriteEventsFailure","Like `OperationResult` on the wire but does not have a success value. Explains the reason for failure."]],"mod":[["builder","Builders to help building requests."]],"struct":[["EventStoreClient","`tokio_service::Service` implementation of the client."],["MasterInfo",""],["Package","Frame in the protocol. On the wire, packets are embedded in frames with length prefix and suffix."],["ReadStreamSuccess","Successful response to a `Message::ReadStreamEvents`."],["ResolvedIndexedEvent",""],["UsernamePassword","Username and password authentication token embedded in requests as there is no concept of session in the TCP protocol, every request must be authenticated."],["WriteEvents",""],["WriteEventsCompleted","Successful response to `Message::WriteEvents`"]]});